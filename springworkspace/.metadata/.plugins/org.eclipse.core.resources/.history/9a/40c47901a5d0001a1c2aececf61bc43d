package com.spring.employees.controller;

import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import com.spring.employees.service.InterEmpService;

@Controller
public class EmpController {
	
	@Autowired
	private InterEmpService service;
	
	
	
	@RequestMapping(value="/emp/empList.action")
	public ModelAndView empList(HttpServletRequest request, ModelAndView mav) {
		
		// employees 테이블에서 근무중인 사원들의 사원번호 불러오기
		List<String> deptIdList = service.deptIdList();
		
		String sDeptIds = request.getParameter("sDeptIds");
		
		String gender = request.getParameter("gender");
		
		HashMap<String, Object> paraMap = new HashMap<>();
		/*		
		   in 연산자는 collection 만 들어오기 때문에 HashMap<String, String>이 아니라
		   HashMap<String, Object>로 해줘야함 !!!
		*/
		
		if(sDeptIds != null && !"".equals(sDeptIds)) {
			String[] deptIdArr = sDeptIds.split(",");
			paraMap.put("deptIdArr", deptIdArr);
			
			mav.addObject("sDeptIds", sDeptIds); // 뷰단에서 체크된 값을 유지시키기 위한 것
		}
		
		if(gender != null && !"".equals(gender)) {
			paraMap.put("gender", gender);
			
			mav.addObject("gender", gender); // 뷰단에서 체크된 값을 유지시키기 위한 것
		}
		
		List<HashMap<String, String>> empList = service.empList(paraMap);
		
		mav.addObject("deptIdList", deptIdList);
		mav.addObject("empList", empList);
		mav.setViewName("/emp/empList.tiles2");
		
		return mav;
	}
	
	
	// >>> 차트 그리기 (Ajax) 부서번호별 인원수 <<< //
	@RequestMapping(value="/emp/chart.action")
	public ModelAndView chart(ModelAndView mav) {
		mav.setViewName("emp/chart.tiles2");
		return mav;
	}
	
	
}
