package com.spring.board.aop;

import org.aspectj.lang.JoinPoint;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.springframework.stereotype.Component;

// === #53. 공통 관심사 클래스(Aspect 클래스) 생성하기 === // 

@Aspect /* 공통 관심사 클래스 객체로 등록한다. */
@Component /* bean 으로 등록된다. */ 
public class LoginCheck {

	/*
	 	주업무(ex: 글쓰기, 글수정, 댓글쓰기 등등)를 실행하기 앞서
	 	이러한 주업무들은 먼저 로그인을 해야만 사용가능한 작업이므로 
	 	주업무에대한 보조업무(ex: 로그인 유무 검사) 객체로 로그인 여부를 체크하는
	 	관심 클래스(Aspect 클래스)를 생성하여 포인트컷(주업무)과 어드바이스(보조업무)를 생성하여
	 	동작하도록 만든다. 
	 */
	
	// == Pointcut 을 생성한다. == 
	// Pointcut이란 공통 관심사를 필요로 하는 메소드를 말한다.
	// 																	  ↓파라미터 갯수가 몇개가 와도 상관없다
	@Pointcut("execution(public * com.spring..*Controller.requiredLogin_*(..))")
	//         ▲명령어			  ↑시작 클래스명 ↑아무거나 다 들어와도됨	클래스명 끝이 Controller이어야함
	// 														   ↑메소드 이름이 requiredLogin_로 시작하면 됨
	public void requiredLogin() {}
	
	// == Before Advice를 구현한다. (공통 관심사, 보조업무) ==
	@Before("requiredLogin()")
	public void loginChk(JoinPoint joinPoint) { // 로그인 유무 검사를 하는 메소드 작성하기
		// JoinPoint joinPoint 는 포인트컷 된 주업무의 메소드이다.
		
		
		// 로그인 유무를 확인하기 위해서는 request를 통해 session을 얻어와야 한다.
		joinPoint
		
		
	}
	
	
}
